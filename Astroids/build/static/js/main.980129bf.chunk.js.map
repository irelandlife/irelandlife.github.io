{"version":3,"sources":["audio/explosion.mp3","images/earth.jpg","images/moon.png","audio/laser.mp3","audio/engine.mp3","audio/engine2.mp3","audio/bg.mp3","audio/warp.mp3","audio/click.mp3","3d/Stars.js","3d/Planets.js","3d/Effects.js","audio/index.js","store.js","3d/Particles.js","3d/Enemies.js","3d/Rocks.js","3d/Explosions.js","3d/Rings.js","3d/Track.js","3d/Ship.js","3d/Rig.js","Hud.js","App.js","index.js"],"names":["module","exports","Stars","count","positions","useMemo","i","r","theta","Math","PI","random","phi","acos","x","cos","sin","y","z","push","Float32Array","attach","attachObject","length","array","itemSize","size","sizeAttenuation","color","fog","Planets","ref","useRef","useLoader","THREE","earthImg","moonImg","texture","moon","scale","position","args","map","roughness","distance","intensity","Effects","composer","useThree","scene","gl","camera","useEffect","current","setSize","width","height","useFrame","render","attachArray","undefined","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","mp3","explosion","explosionAudio","zap","Audio","zapAudio","engine","engineAudio","engine2","engine2Audio","bg","bgAudio","warp","warpAudio","click","clickAudio","guid","create","set","get","spline","Curves","GrannyKnot","track","cancelLaserTO","cancelExplosionTO","box","sound","points","health","lasers","explosions","rocks","randomData","enemies","mutation","t","startTime","Date","now","fov","hits","rings","randomRings","particles","looptime","binormal","normal","clock","mouse","dummy","ray","actions","init","start","toggleSound","addEffect","time","parameters","path","getPointAt","multiplyScalar","warping","playAudio","audio","filter","test","e","a","concat","previous","updates","data","state","clearTimeout","setTimeout","rock","find","enemy","shoot","initializePS4ControllerSupport","Fire_The_Cannons","haveEvents","window","controllers","sign","PS4WebAxisMap_Windows","0","1","2","3","PS4WebAxisValues","4","5","PS4WebButtonMap","6","7","8","9","10","11","12","13","14","15","16","17","PS4WebButtonsPressed","X","Circle","Square","Triangle","L1","R1","L2","R2","SHARE","OPTIONS","L3","R3","Up","Down","Left","Right","PS","DragPad","addgamepad","gamepad","index","setInterval","updateStatus","gamepads","navigator","getGamepads","webkitGetGamepads","scangamepads","j","controller","buttons","btnPressed","pressed","axes","abs","toFixed","PS4WebAxisMap","innerWidth","innerHeight","addEventListener","ua","userAgent","indexOf","updateMouse","clientX","clientY","min","copy","offset","max","expandByScalar","hit","result","intersectBox","origin","distanceTo","useStore","api","radius","Array","fill","pos","clone","add","speed","temp","pickt","tangents","pick","floor","lookAt","getLength","matrix","binormals","toArray","volume","loop","getState","currentTime","play","pause","Particles","instancedMesh","forEach","particle","rotation","updateMatrix","setMatrixAt","instanceMatrix","needsUpdate","frustumCulled","Enemies","Drone","key","setFromCenterAndSize","glowMaterial","React","memo","gltf","GLTFLoader","getElapsedTime","material","name","__$","geometry","Rocks","Rock","metalness","make","createRef","normalize","Explosions","Explosion","group","type","mesh","children","vec","opacity","transparent","side","Rings","f","onUpdate","self","quaternion","setFromRotationMatrix","Track","lightgreen","hotpink","laserMaterial","crossMaterial","direction","Ship","main","laserGroup","laserLight","exhaust","cross","target","getWorldPosition","getWorldDirection","negate","visible","renderOrder","Rig","rig","segments","pickNext","subVectors","dir","getTangentAt","updateProjectionMatrix","lightPos","Hud","toggle","seconds","innerText","clearInterval","score","UpperLeft","onClick","UpperRight","href","LowerLeft","Global","LowerRight","style","base","css","styled","div","createGlobalStyle","App","concurrent","antialias","onPointerMove","near","far","onCreated","gammaInput","toneMapping","setClearColor","fallback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.980129bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/explosion.5c5ce697.mp3\";","module.exports = __webpack_public_path__ + \"static/media/earth.12d16034.jpg\";","module.exports = __webpack_public_path__ + \"static/media/moon.8e294414.png\";","module.exports = __webpack_public_path__ + \"static/media/laser.a97c8e67.mp3\";","module.exports = __webpack_public_path__ + \"static/media/engine.e896d081.mp3\";","module.exports = __webpack_public_path__ + \"static/media/engine2.bdb08091.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bg.a93d8e1a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/warp.5699f1c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/click.8d516cce.mp3\";","import React, { useMemo } from 'react'\n\nexport default function Stars({ count = 2000 }) {\n  const positions = useMemo(() => {\n    let positions = []\n    for (let i = 0; i < count; i++) {\n      const r = 4000\n      const theta = 2 * Math.PI * Math.random()\n      const phi = Math.acos(2 * Math.random() - 1)\n      const x = r * Math.cos(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const y = r * Math.sin(theta) * Math.sin(phi) + (-2000 + Math.random() * 4000)\n      const z = r * Math.cos(phi) + (-1000 + Math.random() * 2000)\n      positions.push(x)\n      positions.push(y)\n      positions.push(z)\n    }\n    return new Float32Array(positions)\n  }, [count])\n  return (\n    <points>\n      <bufferGeometry attach=\"geometry\">\n        <bufferAttribute attachObject={['attributes', 'position']} count={positions.length / 3} array={positions} itemSize={3} />\n      </bufferGeometry>\n      <pointsMaterial attach=\"material\" size={15} sizeAttenuation color=\"white\" fog={false} />\n    </points>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader } from 'react-three-fiber'\nimport earthImg from '../images/earth.jpg'\nimport moonImg from '../images/moon.png'\n\nexport default function Planets() {\n  const ref = useRef()\n  const [texture, moon] = useLoader(THREE.TextureLoader, [earthImg, moonImg])\n  return (\n    <group ref={ref} scale={[100, 100, 100]} position={[-500, -500, 1000]}>\n      <mesh>\n        <sphereBufferGeometry attach=\"geometry\" args={[5, 32, 32]} />\n        <meshStandardMaterial attach=\"material\" map={texture} roughness={1} fog={false} />\n      </mesh>\n      <mesh position={[5, -5, -5]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[0.75, 32, 32]} />\n        <meshStandardMaterial attach=\"material\" roughness={1} map={moon} fog={false} />\n      </mesh>\n      <pointLight position={[-5, -5, -5]} distance={1000} intensity={6} />\n      <mesh position={[-30, -10, -60]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[4, 32, 32]} />\n        <meshBasicMaterial attach=\"material\" color=\"#FFFF99\" fog={false} />\n        <pointLight distance={6100} intensity={50} color=\"white\" />\n      </mesh>\n    </group>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport { extend, useThree, useFrame } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass'\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass, FilmPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const { scene, gl, size, camera } = useThree()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <unrealBloomPass attachArray=\"passes\" args={[undefined, 1.8, 1, 0]} />\n    </effectComposer>\n  )\n}\n","import zapAudio from './laser.mp3'\nimport engineAudio from './engine.mp3'\nimport engine2Audio from './engine2.mp3'\nimport bgAudio from './bg.mp3'\nimport warpAudio from './warp.mp3'\nimport clickAudio from './click.mp3'\nimport explosionAudio from './explosion.mp3'\n\nconst mp3 = { explosion: explosionAudio }\n\nconst zap = new Audio(zapAudio)\nconst engine = new Audio(engineAudio)\nconst engine2 = new Audio(engine2Audio)\nconst bg = new Audio(bgAudio)\nconst warp = new Audio(warpAudio)\nconst click = new Audio(clickAudio)\nconst explosion = new Audio(explosionAudio)\n\nexport { zap, engine, engine2, bg, warp, click, explosion, mp3 }\n","import * as THREE from 'three'\nimport { Curves } from 'three/examples/jsm/curves/CurveExtras'\nimport { addEffect } from 'react-three-fiber'\nimport create from 'zustand'\nimport * as audio from './audio'\n\nlet guid = 1\n\nconst [useStore, api] = create((set, get) => {\n  let spline = new Curves.GrannyKnot()\n  let track = new THREE.TubeBufferGeometry(spline, 250, 0.2, 10, true)\n  let cancelLaserTO = undefined\n  let cancelExplosionTO = undefined\n  const box = new THREE.Box3()\n\n  return {\n    sound: false,\n    camera: undefined,\n    points: 0,\n    health: 100,\n    lasers: [],\n    explosions: [],\n    rocks: randomData(100, track, 150, 8, () => 1 + Math.random() * 2.5),\n    enemies: randomData(10, track, 20, 15, 1),\n\n    mutation: {\n      t: 0,\n      position: new THREE.Vector3(),\n      startTime: Date.now(),\n\n      track,\n      scale: 15,\n      fov: 70,\n      hits: false,\n      rings: randomRings(30, track),\n      particles: randomData(1500, track, 100, 1, () => 0.5 + Math.random() * 0.8),\n      looptime: 40 * 1000,\n      binormal: new THREE.Vector3(),\n      normal: new THREE.Vector3(),\n      clock: new THREE.Clock(false),\n      mouse: new THREE.Vector2(-250, 50),\n\n      // Re-usable objects\n      dummy: new THREE.Object3D(),\n      ray: new THREE.Ray(),\n      box: new THREE.Box3()\n    },\n\n    actions: {\n      init(camera) {\n        const { mutation, actions } = get()\n\n        set({ camera })\n        mutation.clock.start()\n        actions.toggleSound(get().sound)\n\n        addEffect(() => {\n          const { rocks, enemies } = get()\n\n          const time = Date.now()\n          const t = (mutation.t = ((time - mutation.startTime) % mutation.looptime) / mutation.looptime)\n          mutation.position = track.parameters.path.getPointAt(t)\n          mutation.position.multiplyScalar(mutation.scale)\n\n          // test for wormhole/warp\n          let warping = false\n          if (t > 0.3 && t < 0.4) {\n            if (!warping) {\n              warping = true\n              playAudio(audio.warp)\n            }\n          } else if (t > 0.5) warping = false\n\n          // test for hits\n          const r = rocks.filter(actions.test)\n          const e = enemies.filter(actions.test)\n          const a = r.concat(e)\n          const previous = mutation.hits\n          mutation.hits = a.length\n          if (previous === 0 && mutation.hits) playAudio(audio.click)\n          const lasers = get().lasers\n          if (mutation.hits && lasers.length && time - lasers[lasers.length - 1] < 100) {\n            const updates = a.map((data) => ({ time: Date.now(), ...data }))\n            set((state) => ({ explosions: [...state.explosions, ...updates] }))\n            clearTimeout(cancelExplosionTO)\n            cancelExplosionTO = setTimeout(() => set((state) => ({ explosions: state.explosions.filter(({ time }) => Date.now() - time <= 1000) })), 1000)\n            set((state) => ({\n              points: state.points + r.length * 100 + e.length * 200,\n              rocks: state.rocks.filter((rock) => !r.find((r) => r.guid === rock.guid)),\n              enemies: state.enemies.filter((enemy) => !e.find((e) => e.guid === enemy.guid))\n            }))\n          }\n          //if (a.some(data => data.distance < 15)) set(state => ({ health: state.health - 1 }))\n        })\n      },\n      shoot() {\n        set((state) => ({ lasers: [...state.lasers, Date.now()] }))\n        clearTimeout(cancelLaserTO)\n        cancelLaserTO = setTimeout(() => set((state) => ({ lasers: state.lasers.filter((t) => Date.now() - t <= 1000) })), 1000)\n        playAudio(audio.zap, 0.5)\n      },\n      initializePS4ControllerSupport() {\n        function Fire_The_Cannons() {\n          set((state) => ({ lasers: [...state.lasers, Date.now()] }))\n          clearTimeout(cancelLaserTO)\n          cancelLaserTO = setTimeout(() => set((state) => ({ lasers: state.lasers.filter((t) => Date.now() - t <= 1000) })), 1000)\n          playAudio(audio.zap, 0.5)\n        }\n\n        // enable gamepad controller support\n        var haveEvents = 'ongamepadconnected' in window\n        var controllers = {}\n        var stickyJoystickHelper = 0.07 // make this number higher to reduce the effect of sticky joysticks\n        var x = 0\n        var y = 0\n        var sign = 1 // this is 1 for windows, -1 for iphone, it's because iphone axis goes 1 to -1 up to down\n        // while windows goes -1 to 1 up to down\n        // PS4WebAxisMap_iPhone\n        var PS4WebAxisMap_Windows = {\n          0: 'LStickLR',\n          1: 'LStickUD',\n          2: 'RStickLR',\n          3: 'RStickUD'\n        }\n\n        var PS4WebAxisMap_iPhone = {\n          0: 'LStickLR',\n          1: 'LStickUD',\n          2: 'RStickLR',\n          3: 'RStickUD',\n          4: 'dPadLR',\n          5: 'dPadUD'\n        }\n\n        var PS4WebAxisValues = {\n          0: 0,\n          1: 0,\n          2: 0,\n          3: 0,\n          4: 0,\n          5: 0\n        }\n\n        // iPhone buttons only read up to [0:7] while windows reads all [0:17]\n        var PS4WebButtonMap = {\n          0: 'X',\n          1: 'Circle',\n          2: 'Square',\n          3: 'Triangle',\n          4: 'L1',\n          5: 'R1',\n          6: 'L2',\n          7: 'R2',\n          8: 'SHARE',\n          9: 'OPTIONS',\n          10: 'L3',\n          11: 'R3',\n          12: 'Up',\n          13: 'Down',\n          14: 'Left',\n          15: 'Right',\n          16: 'PS',\n          17: 'DragPad'\n        }\n\n        // these correspond to the ps4 web button map and are true if the button\n        // is being pressed, and false when not.\n        var PS4WebButtonsPressed = {\n          X: false,\n          Circle: false,\n          Square: false,\n          Triangle: false,\n          L1: false,\n          R1: false,\n          L2: false,\n          R2: false,\n          SHARE: false,\n          OPTIONS: false,\n          L3: false,\n          R3: false,\n          Up: false,\n          Down: false,\n          Left: false,\n          Right: false,\n          PS: false,\n          DragPad: false\n        }\n\n        // if multiple gamepads are connected to a computer, this gets called\n        function connecthandler(e) {\n          // e comes from window event triggering argument\n          // event listener for when a certain button is pressed\n          addgamepad(e.gamepad) // e.gamepad is of high importance\n        }\n\n        // call this to add a newly connected gamepad's own button divs and spans and progresses for each button or axes that's detected\n        // this is only called once each time a new gamepad is added\n        function addgamepad(gamepad) {\n          controllers[gamepad.index] = gamepad // save gamepad to the controllers dictionary(python)\n          // var d = document.createElement(\"div\"); // create a new section\n          // d.setAttribute(\"id\", \"controller\" + gamepad.index); // update the div's id=\"controller#\"\n\n          // append the main <div id=\"controller#\"> tag and all the sub tags to the doc body\n          // document.body.appendChild(d);\n          // d.style.display = \"none\";\n          // requestAnimationFrame(updateStatus); // this updates about every 20ms...too fast\n          setInterval(updateStatus, 50) // check the update status every 50 ms. Perfect!\n        }\n\n        // this is the function that is being listed for by the window and that gets called after a gamepad\n        // was disconnected -- start removing a gamepad from the html body\n        function disconnecthandler(e) {\n          removegamepad(e.gamepad)\n        }\n\n        // we can select the controller/element by it's id that was set earlier\n        // and remove it which removes all the tags for its buttons and axes.\n        function removegamepad(gamepad) {\n          // var d = document.getElementById(\"controller\" + gamepad.index);\n          // document.body.removeChild(d);\n          delete controllers[gamepad.index] // this removes the controller's existance from the dictionary\n        }\n\n        // This gets called repeatedly to check which buttons are being pressed\n        // and how what directions/how far the axis controls are being pressed.\n        function updateStatus() {\n          // if not 'ongamepadconnected' in window, if no gamepad is connected, scan for gamepads\n          if (!haveEvents) {\n            scangamepads()\n          }\n          var i = 0\n          var j\n          // if a gamepad is connected:\n          // for every j controller navigator.getGamepads()[i] in controllers dictionary\n          for (j in controllers) {\n            var controller = controllers[j]\n            // d = document.getElementById(\"controller\" + j); // get the right controller element from the dict\n            // htmlButtons = d.getElementsByClassName(\"button\"); // get a list of all the button elements for the controller\n            // aButtonWasPressed = false // reset each time\n            // check the following for the number of buttons the controller has\n            for (i = 0; i < controller.buttons.length; i++) {\n              var controllerButtonObj = controller.buttons[i] // get the controller's i'th button object\n              var btnPressed = controllerButtonObj.pressed //val is the controller button: pressed: T/F\n              // var btnValue = controllerButtonObj.value // value comes from the val object. val is the number returned by the controller button\n              // I will keep an array of the buttons that\n              // btnPressedOrReleased = \"pressed\";\n              // if (btnPressed == true) {\n              //   aButtonWasPressed = true\n              // }\n              // I would like to be able to enable autofire\n              // for a certain amount of time with a cooldown\n              // or reload timeout\n              // Enable auto fire: keep the cannons firing\n              // while R2 is being held down\n              if (btnPressed === true && PS4WebButtonMap[i] === 'R2' && PS4WebButtonsPressed['R2'] === true) {\n                Fire_The_Cannons()\n              }\n\n              // I need to know which button was pressed\n              if (btnPressed === true && PS4WebButtonsPressed[PS4WebButtonMap[i]] === false) {\n                // if a released button was pressed\n                PS4WebButtonsPressed[PS4WebButtonMap[i]] = true // do nothing if there was no change\n                // singlefire with R1\n                if (PS4WebButtonMap[i] === 'R1') {\n                  Fire_The_Cannons()\n                }\n              } else if (btnPressed === false && PS4WebButtonsPressed[PS4WebButtonMap[i]] === true) {\n                // btnPressedOrReleased = \"released\";\n                PS4WebButtonsPressed[PS4WebButtonMap[i]] = false\n              }\n            }\n            // run through every axis in the controller\n            for (i = 0; i < controller.axes.length; i++) {\n              // I would like to fly around on the screen\n              // with the left joystick,\n              // iPhone ps4 stick values go from -1 to 1 when the\n              // stick goes from left to right and down to up\n              // Windows axis values change from -1 to 1 when stick goes from left to right, up to down\n              // mouse.set(0, 0) is the center of the screen\n              // the screen width is supposed to be window.innerWidth\n              // this only updates with a new axis value when a significant change occurs (>0.04)\n              if (Math.abs(PS4WebAxisValues[i] - controller.axes[i]) >= 0.01) {\n                PS4WebAxisValues[i] = controller.axes[i].toFixed(2) // from -1 to 1\n                // if the joystick is almost 0, make it 0. So there is no unwanted phantom movement from the stick\n                if (Math.abs(PS4WebAxisValues[i]) <= stickyJoystickHelper) {\n                  PS4WebAxisValues[i] = 0\n                }\n                // update the new x and y for the ship only if a sizeable change in position occurred\n                if (PS4WebAxisMap[i] === 'LStickLR') {\n                  x = PS4WebAxisValues[i] * window.innerWidth * 0.5\n                } else if (PS4WebAxisMap[i] === 'LStickUD') {\n                  y = PS4WebAxisValues[i] * window.innerHeight * sign * 0.5\n                }\n                get().mutation.mouse.set(x, y) // update where the game thinks the mouse is so the ship moves there\n              }\n            }\n          }\n        }\n\n        // check the navigator for gamepads\n        function scangamepads() {\n          var gamepads = navigator.getGamepads ? navigator.getGamepads() : navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []\n          // for each gamepad that was found\n          for (var i = 0; i < gamepads.length; i++) {\n            // check to see if the i'th gamepads has something\n            if (gamepads[i]) {\n              // if the i'th gamepads index is in the controllers dict\n              if (gamepads[i].index in controllers) {\n                // update the controllers dictionary to the navigator gamepad's state (which updates which buttons/axes are being pressed)\n                controllers[gamepads[i].index] = gamepads[i]\n              } else {\n                // otherwise, this is a new gamepad, so add it\n                addgamepad(gamepads[i])\n              }\n            }\n          }\n        }\n        // the window is listening for gamepads connecting to the website/pc. If found, trigger connecthandler() function with window as first argument\n        window.addEventListener('gamepadconnected', connecthandler)\n        window.addEventListener('gamepaddisconnected', disconnecthandler) // also listen for when the gamepad is disconnected\n        // Every 0.5sec, call scangamepads()\n        // if not 'ongamepadconnected' in window, scan for gamepads again in 500ms\n        // The following isn't needed with the window event listener for \"gamepadconnected\"\n        // If I only want to scan for gamepad button changes every n ms, I can use\n        // the following rather than rely on hte event listener for button changes (faster)\n        // if (!haveEvents) {\n        //     setInterval(scangamepads, 500);\n        // }\n        // Current deviceType's are \"iPhone\", \"Windows\", \"Linux\"\n        // The following checks if I'm using an iphone or pc,\n        // which I need since the button mapping is extra wack between them rn\n        // var deviceType = ''\n        var PS4WebAxisMap = {}\n        var ua = window.navigator.userAgent\n        if (ua.indexOf('iPhone') !== -1 && ua.indexOf('Safari') !== -1) {\n          // deviceType = 'iPhone'\n          sign = -1\n          PS4WebAxisMap = PS4WebAxisMap_iPhone\n        } else if (ua.indexOf('Chrome') !== -1 && ua.indexOf('Windows') !== -1) {\n          // deviceType = 'Windows'\n          sign = 1\n          PS4WebAxisMap = PS4WebAxisMap_Windows\n        } else if (ua.indexOf('Chrome') !== -1 && ua.indexOf('Linux') !== -1) {\n          // deviceType = 'Linux'\n          sign = 1\n          PS4WebAxisMap = PS4WebAxisMap_Windows\n        } else {\n          // deviceType = 'Unknown'\n          sign = 1\n          PS4WebAxisMap = PS4WebAxisMap_Windows\n        }\n      },\n      toggleSound(sound = !get().sound) {\n        set({ sound })\n        playAudio(audio.engine, 1, true)\n        playAudio(audio.engine2, 0.3, true)\n        playAudio(audio.bg, 1, true)\n      },\n      updateMouse({ clientX: x, clientY: y }) {\n        get().mutation.mouse.set(x - window.innerWidth / 2, y - window.innerHeight / 2)\n      },\n      test(data) {\n        box.min.copy(data.offset)\n        box.max.copy(data.offset)\n        box.expandByScalar(data.size * data.scale)\n        data.hit.set(10000, 10000, 10000)\n        const result = get().mutation.ray.intersectBox(box, data.hit)\n        data.distance = get().mutation.ray.origin.distanceTo(data.hit)\n        return result\n      }\n    }\n  }\n})\n\nfunction randomData(count, track, radius, size, scale) {\n  return new Array(count).fill().map(() => {\n    const t = Math.random()\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const offset = pos\n      .clone()\n      .add(new THREE.Vector3(-radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2, -radius + Math.random() * radius * 2))\n    const speed = 0.1 + Math.random()\n    return { guid: guid++, scale: typeof scale === 'function' ? scale() : scale, size, offset, pos, speed, radius, t, hit: new THREE.Vector3(), distance: 1000 }\n  })\n}\n\nfunction randomRings(count, track) {\n  let temp = []\n  let t = 0.4\n  for (let i = 0; i < count; i++) {\n    t += 0.003\n    const pos = track.parameters.path.getPointAt(t)\n    pos.multiplyScalar(15)\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const lookAt = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(15)\n    const matrix = new THREE.Matrix4().lookAt(pos, lookAt, track.binormals[pick])\n    temp.push([pos.toArray(), matrix])\n  }\n  return temp\n}\n\nfunction playAudio(audio, volume = 1, loop = false) {\n  if (api.getState().sound) {\n    audio.currentTime = 0\n    audio.volume = Math.max(volume, 1)\n    audio.loop = loop\n    audio.play()\n  } else audio.pause()\n}\n\nexport default useStore\nexport { audio, playAudio }\n","import React, { useRef, useEffect } from 'react'\nimport useStore from '../store'\n\nexport default function Particles() {\n  const instancedMesh = useRef()\n  const { particles, dummy } = useStore(state => state.mutation)\n\n  useEffect(() => {\n    particles.forEach((particle, i) => {\n      const { offset, scale } = particle\n      dummy.position.copy(offset)\n      dummy.scale.set(scale, scale, scale)\n      dummy.rotation.set(Math.sin(Math.random()) * Math.PI, Math.sin(Math.random()) * Math.PI, Math.cos(Math.random()) * Math.PI)\n      dummy.updateMatrix()\n      instancedMesh.current.setMatrixAt(i, dummy.matrix)\n    })\n    instancedMesh.current.instanceMatrix.needsUpdate = true\n  }, [])\n\n  return (\n    <instancedMesh ref={instancedMesh} args={[null, null, particles.length]} frustumCulled={false}>\n      <coneBufferGeometry attach=\"geometry\" args={[2, 2, 3]} />\n      <meshStandardMaterial attach=\"material\" color=\"#606060\" />\n    </instancedMesh>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nexport default function Enemies() {\n  const enemies = useStore(state => state.enemies)\n  return enemies.map((data, i) => <Drone key={i} data={data} />)\n}\n\nconst box = new THREE.Box3()\nbox.setFromCenterAndSize(new THREE.Vector3(0, 0, 1), new THREE.Vector3(3, 3, 3))\nconst glowMaterial = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightblue') })\n\nconst Drone = React.memo(({ data }) => {\n  const { clock } = useStore(state => state.mutation)\n  const gltf = useLoader(GLTFLoader, '/drone.gltf')\n  const ref = useRef()\n\n  useFrame(() => {\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n    ref.current.position.copy(data.offset)\n    ref.current.rotation.set(r, r, r)\n  })\n\n  return (\n    <group ref={ref} scale={[5, 5, 5]}>\n      <mesh position={[0, 0, 50]} rotation={[Math.PI / 2, 0, 0]} material={glowMaterial}>\n        <cylinderBufferGeometry attach=\"geometry\" args={[0.25, 0.25, 100, 4]} />\n      </mesh>\n      <mesh name=\"Sphere_DroneGlowmat_0\">\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n        <meshStandardMaterial attach=\"material\" {...gltf.__$[7].material} name=\"DroneGlowmat\" />\n      </mesh>\n      <mesh name=\"Sphere_Body_0\" material={glowMaterial}>\n        <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n        <meshStandardMaterial attach=\"material\" {...gltf.__$[8].material} name=\"Body\" />\n      </mesh>\n    </group>\n  )\n})\n","import React, { useRef } from 'react'\nimport { useFrame, useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nexport default function Rocks() {\n  const gltf = useLoader(GLTFLoader, '/rock.gltf')\n  const rocks = useStore(state => state.rocks)\n  return rocks.map(data => <Rock gltf={gltf} key={data.guid} data={data} />)\n}\n\nconst Rock = React.memo(({ gltf, data }) => {\n  const ref = useRef()\n  const { clock } = useStore(state => state.mutation)\n  useFrame(() => {\n    const r = Math.cos((clock.getElapsedTime() / 2) * data.speed) * Math.PI\n    ref.current.rotation.set(r, r, r)\n  })\n  return (\n    <group ref={ref} position={data.offset} scale={[data.scale, data.scale, data.scale]}>\n      <object3D\n        position={[-0.016298329457640648, -0.012838120572268963, 0.24073271453380585]}\n        rotation={[3.0093872578726644, 0.27444228385461117, -0.22745113653772078]}\n        scale={[20, 20, 20]}>\n        <mesh>\n          <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n          <meshStandardMaterial attach=\"material\" {...gltf.__$[7].material} color=\"white\" roughness={1} metalness={1} />\n        </mesh>\n      </object3D>\n    </group>\n  )\n})\n","import * as THREE from 'three'\nimport React, { useRef, useMemo, useEffect } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport useStore, { audio, playAudio } from '../store'\n\nfunction make(color, speed) {\n  return {\n    ref: React.createRef(),\n    color,\n    data: new Array(20)\n      .fill()\n      .map(() => [\n        new THREE.Vector3(),\n        new THREE.Vector3(-1 + Math.random() * 2, -1 + Math.random() * 2, -1 + Math.random() * 2).normalize().multiplyScalar(speed * 0.75)\n      ])\n  }\n}\n\nexport default function Explosions() {\n  const explosions = useStore(state => state.explosions)\n  return explosions.map(({ guid, offset, scale }) => <Explosion key={guid} position={offset} scale={scale * 0.75} />)\n}\n\nfunction Explosion({ position, scale }) {\n  const group = useRef()\n  const { dummy } = useStore(state => state.mutation)\n  const particles = useMemo(() => [make('white', 0.8), make('orange', 0.6)], [])\n\n  useEffect(() => void playAudio(new Audio(audio.mp3.explosion), 0.5), [])\n\n  useFrame(() => {\n    particles.forEach(({ data }, type) => {\n      const mesh = group.current.children[type]\n      data.forEach(([vec, normal], i) => {\n        vec.add(normal)\n        dummy.position.copy(vec)\n        dummy.updateMatrix()\n        mesh.setMatrixAt(i, dummy.matrix)\n      })\n      mesh.material.opacity -= 0.025\n      mesh.instanceMatrix.needsUpdate = true\n    })\n  })\n\n  return (\n    <group ref={group} position={position} scale={[scale, scale, scale]}>\n      {particles.map(({ color, data }, index) => (\n        <instancedMesh key={index} args={[null, null, data.length]} frustumCulled={false}>\n          <dodecahedronBufferGeometry attach=\"geometry\" args={[10, 0]} />\n          <meshBasicMaterial attach=\"material\" color={color} transparent opacity={1} fog={false} />\n        </instancedMesh>\n      ))}\n    </group>\n  )\n}\n","import * as THREE from 'three'\nimport React from 'react'\nimport useStore from '../store'\n\nconst geometry = new THREE.RingBufferGeometry(1, 1.01, 64)\nconst material = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightgreen'), side: THREE.DoubleSide })\n\nexport default function Rings() {\n  const { rings } = useStore(state => state.mutation)\n  return rings.map(([pos, matrix], i) => {\n    const f = (Math.sin(i / 10) * Math.PI) / 2\n    return (\n      <mesh\n        key={i}\n        position={pos}\n        scale={[30 + i * 5 * f, 30 + i * 5 * f, 30 + i * 5 * f]}\n        onUpdate={self => self.quaternion.setFromRotationMatrix(matrix)}\n        geometry={geometry}\n        material={material}\n      />\n    )\n  })\n}\n","import React from 'react'\nimport useStore from '../store'\n\nexport default function Track() {\n  const { scale, track } = useStore(state => state.mutation)\n  return (\n    <mesh scale={[scale, scale, scale]} geometry={track}>\n      <meshBasicMaterial attach=\"material\" color=\"indianred\" />\n    </mesh>\n  )\n}\n","import * as THREE from 'three'\nimport React, { useRef } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport useStore from '../store'\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 40)\nconst lightgreen = new THREE.Color('lightgreen')\nconst hotpink = new THREE.Color('hotpink')\nconst laserMaterial = new THREE.MeshBasicMaterial({ color: lightgreen })\nconst crossMaterial = new THREE.MeshBasicMaterial({ color: hotpink, fog: false })\nconst position = new THREE.Vector3()\nconst direction = new THREE.Vector3()\n\nexport default function Ship() {\n  const gltf = useLoader(GLTFLoader, '/ship.gltf')\n  const mutation = useStore(state => state.mutation)\n  const { clock, mouse, ray } = mutation\n  const lasers = useStore(state => state.lasers)\n  const main = useRef()\n  const laserGroup = useRef()\n  const laserLight = useRef()\n  const exhaust = useRef()\n  const cross = useRef()\n  const target = useRef()\n\n  useFrame(() => {\n    main.current.position.z = Math.sin(clock.getElapsedTime() * 40) * Math.PI * 0.1\n    main.current.rotation.z += (mouse.x / 500 - main.current.rotation.z) * 0.1\n    main.current.rotation.x += (-mouse.y / 1200 - main.current.rotation.x) * 0.1\n    main.current.rotation.y += (-mouse.x / 1200 - main.current.rotation.y) * 0.1\n    main.current.position.x += (mouse.x / 10 - main.current.position.x) * 0.1\n    main.current.position.y += (25 + -mouse.y / 10 - main.current.position.y) * 0.1\n    exhaust.current.scale.x = 1 + Math.sin(clock.getElapsedTime() * 200)\n    exhaust.current.scale.y = 1 + Math.sin(clock.getElapsedTime() * 200)\n    for (let i = 0; i < lasers.length; i++) {\n      const group = laserGroup.current.children[i]\n      group.position.z -= 20\n    }\n    laserLight.current.intensity += ((lasers.length && Date.now() - lasers[lasers.length - 1] < 100 ? 20 : 0) - laserLight.current.intensity) * 0.3\n\n    // Get ships orientation and save it to the stores ray\n    main.current.getWorldPosition(position)\n    main.current.getWorldDirection(direction)\n    ray.origin.copy(position)\n    ray.direction.copy(direction.negate())\n\n    // ...\n    crossMaterial.color = mutation.hits ? lightgreen : hotpink\n    cross.current.visible = !mutation.hits\n    target.current.visible = !!mutation.hits\n  })\n\n  return (\n    <group ref={main}>\n      <group scale={[3.5, 3.5, 3.5]}>\n        <group ref={cross} position={[0, 0, -300]} name=\"cross\">\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[20, 2, 2]} />\n          </mesh>\n          <mesh renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[2, 20, 2]} />\n          </mesh>\n        </group>\n        <group ref={target} position={[0, 0, -300]} name=\"target\">\n          <mesh position={[0, 20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[0, -20, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[40, 2, 2]} />\n          </mesh>\n          <mesh position={[20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\n          </mesh>\n          <mesh position={[-20, 0, 0]} renderOrder={1000} material={crossMaterial}>\n            <boxBufferGeometry attach=\"geometry\" args={[2, 40, 2]} />\n          </mesh>\n        </group>\n        <pointLight ref={laserLight} position={[0, 0, -20]} distance={100} intensity={0} color=\"lightgreen\" />\n        <group ref={laserGroup}>\n          {lasers.map((t, i) => (\n            <group key={i}>\n              <mesh position={[-2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n              <mesh position={[2.8, 0, -0.8]} geometry={geometry} material={laserMaterial} />\n            </group>\n          ))}\n        </group>\n        <group rotation={[Math.PI / 2, Math.PI, 0]}>\n          <mesh name=\"Renault_(S,_T1)_0\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[5].geometry} />\n            <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_1\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[6].geometry} />\n            <meshStandardMaterial attach=\"material\" color=\"black\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_2\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[7].geometry} />\n            <meshStandardMaterial attach=\"material\" color=\"#070707\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_3\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[8].geometry} />\n            <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_4\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[9].geometry} />\n            <meshBasicMaterial attach=\"material\" color=\"white\" />\n          </mesh>\n          <mesh name=\"Renault_(S,_T1)_5\">\n            <bufferGeometry attach=\"geometry\" {...gltf.__$[10].geometry} />\n            <meshBasicMaterial attach=\"material\" color=\"teal\" />\n          </mesh>\n        </group>\n      </group>\n      <mesh ref={exhaust} scale={[1, 1, 30]} position={[0, 1, 30]}>\n        <dodecahedronBufferGeometry attach=\"geometry\" args={[1.5, 0]} />\n        <meshBasicMaterial attach=\"material\" color=\"lightblue\" />\n      </mesh>\n    </group>\n  )\n}\n","import React, { useRef } from 'react'\nimport { useThree, useFrame } from 'react-three-fiber'\nimport useStore from '../store'\n\nlet offset = 0\nexport default function Rig({ children }) {\n  const group = useRef()\n  const rig = useRef()\n  const mutation = useStore(state => state.mutation)\n  const { fov, scale, binormal, normal, track, mouse } = mutation\n  const { camera } = useThree()\n\n  useFrame(() => {\n    const t = mutation.t\n    const pos = mutation.position.clone()\n    const segments = track.tangents.length\n    const pickt = t * segments\n    const pick = Math.floor(pickt)\n    const pickNext = (pick + 1) % segments\n    binormal.subVectors(track.binormals[pickNext], track.binormals[pick])\n    binormal.multiplyScalar(pickt - pick).add(track.binormals[pick])\n    const dir = track.parameters.path.getTangentAt(t)\n    offset += (Math.max(15, 15 + -mouse.y / 20) - offset) * 0.05\n    normal.copy(binormal).cross(dir)\n    pos.add(normal.clone().multiplyScalar(offset))\n    camera.position.copy(pos)\n    const lookAt = track.parameters.path.getPointAt((t + 30 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    camera.matrix.lookAt(camera.position, lookAt, normal)\n    camera.quaternion.setFromRotationMatrix(camera.matrix)\n    camera.fov += ((t > 0.4 && t < 0.45 ? 120 : fov) - camera.fov) * 0.05\n    camera.updateProjectionMatrix()\n    const lightPos = track.parameters.path.getPointAt((t + 1 / track.parameters.path.getLength()) % 1).multiplyScalar(scale)\n    group.current.position.copy(lightPos)\n    group.current.quaternion.setFromRotationMatrix(camera.matrix)\n  })\n\n  return (\n    <group ref={group}>\n      <pointLight distance={400} position={[0, 100, -420]} intensity={5} color=\"indianred\" />\n      <group ref={rig} position={[0, 0, -50]}>\n        {children}\n      </group>\n    </group>\n  )\n}\n","import React, { useMemo, useRef, useEffect } from 'react'\nimport styled, { css, createGlobalStyle } from 'styled-components'\nimport useStore from './store'\n\nexport default function Hud() {\n  const points = useStore(state => state.points)\n  const health = useStore(state => state.health)\n  const sound = useStore(state => state.sound)\n  const toggle = useStore(state => state.actions.toggleSound)\n\n  const seconds = useRef()\n  useEffect(() => {\n    const t = Date.now()\n    const i = setInterval(() => (seconds.current.innerText = ((Date.now() - t) / 1000).toFixed(1)), 100)\n    return () => clearInterval(i)\n  }, [])\n\n  const score = useMemo(() => (points >= 1000 ? (points / 1000).toFixed(1) + 'K' : points), [points])\n  return (\n    <>\n      <UpperLeft onClick={() => toggle()}>\n        sound\n        <br />\n        {sound ? 'off' : 'on'}\n      </UpperLeft>\n      <UpperRight>\n        <a href=\"https://codesandbox.io/s/react-three-fiber-untitled-game-4pp5r\">source</a>\n        <br />\n        <a href=\"https://twitter.com/0xca0a\">twitter</a>\n        <br />\n        <a href=\"https://github.com/react-spring/react-three-fiber\">github</a>\n      </UpperRight>\n      <LowerLeft>\n        <h2 ref={seconds}>0.0</h2>\n        <h1>{score}</h1>\n      </LowerLeft>\n      <Global />\n      <LowerRight>\n        <div style={{ width: health + '%' }} />\n      </LowerRight>\n    </>\n  )\n}\n\nconst base = css`\n  font-family: 'Teko', sans-serif;\n  position: absolute;\n  text-transform: uppercase;\n  font-weight: 900;\n  font-variant-numeric: slashed-zero tabular-nums;\n  line-height: 1em;\n  pointer-events: none;\n  color: indianred;\n`\n\nconst UpperLeft = styled.div`\n  ${base}\n  top: 40px;\n  left: 50px;\n  font-size: 2em;\n  transform: skew(5deg, 10deg);\n  pointer-events: all;\n  cursor: pointer;\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst UpperRight = styled.div`\n  ${base}\n  text-align: right;\n  top: 40px;\n  right: 50px;\n  font-size: 2em;\n  transform: skew(-5deg, -10deg);\n  pointer-events: all;\n  cursor: pointer;\n  & > a {\n    color: indianred;\n    text-decoration: none;\n  }\n  @media only screen and (max-width: 900px) {\n    font-size: 1.5em;\n  }\n`\n\nconst LowerLeft = styled.div`\n  ${base}\n  bottom: 5px;\n  left: 50px;\n  transform: skew(-5deg, -10deg);\n  width: 200px;\n  & > h1 {\n    margin: 0;\n    font-size: 14em;\n    line-height: 1em;\n  }\n  & > h2 {\n    margin: 0;\n    font-size: 4em;\n    line-height: 1em;\n  }\n  @media only screen and (max-width: 900px) {\n    bottom: 30px;\n    & > h1 {\n      font-size: 6em !important;\n    }\n    & > h2 {\n      font-size: 3em !important;\n    }\n  }\n`\n\nconst LowerRight = styled.div`\n  ${base}\n  bottom: 70px;\n  right: 50px;\n  transform: skew(5deg, 10deg);\n  height: 60px;\n  width: 200px;\n  background: black;\n  & > div {\n    height: 100%;\n    background: indianred;\n  }\n\n  @media only screen and (max-width: 900px) {\n    bottom: 50px;\n    height: 40px;\n    width: 150px;\n  }\n`\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    user-select: none;\n    overflow: hidden;\n  }\n\n  #root {\n    overflow: auto;\n    padding: 0px;\n  }\n\n  body {\n    position: fixed;\n    overflow: hidden;\n    overscroll-behavior-y: none;\n    font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;\n    color: black;\n    background: white;\n  }\n`\n","import * as THREE from 'three'\nimport React, { Suspense } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport Stars from './3d/Stars'\nimport Planets from './3d/Planets'\nimport Effects from './3d/Effects'\nimport Particles from './3d/Particles'\nimport Enemies from './3d/Enemies'\nimport Rocks from './3d/Rocks'\nimport Explosions from './3d/Explosions'\nimport Rings from './3d/Rings'\nimport Track from './3d/Track'\nimport Ship from './3d/Ship'\nimport Rig from './3d/Rig'\nimport Hud from './Hud'\nimport useStore from './store'\n\nexport default function App() {\n  const { fov } = useStore((state) => state.mutation)\n  const actions = useStore((state) => state.actions)\n  return (\n    <>\n      <Canvas\n        concurrent\n        gl={{ antialias: false }}\n        onPointerMove={actions.updateMouse}\n        onClick={actions.shoot}\n        camera={{ position: [0, 0, 2000], near: 0.01, far: 10000, fov }}\n        onCreated={\n          (actions.initializePS4ControllerSupport(),\n          ({ gl, camera }) => {\n            actions.init(camera)\n            gl.gammaInput = true\n            gl.toneMapping = THREE.Uncharted2ToneMapping\n            gl.setClearColor(new THREE.Color('#020209'))\n          })\n        }>\n        <fog attach=\"fog\" args={['#070710', 100, 700]} />\n        <ambientLight intensity={0.25} />\n        <Stars />\n        <Explosions />\n        <Track />\n        <Particles />\n        <Rings />\n        <Suspense fallback={null}>\n          <Rocks />\n          <Planets />\n          <Enemies />\n          <Rig>\n            <Ship />\n          </Rig>\n        </Suspense>\n        <Effects />\n      </Canvas>\n      <Hud />\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}